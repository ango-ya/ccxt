import os
import sys

root = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
sys.path.append(root + '/python')

# ----------------------------------------------------------------------------

# PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
# https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

# ----------------------------------------------------------------------------
import asyncio
import ccxt.async_support as ccxt  # noqa: E402


# AUTO-TRANSPILE #
async def example():
    # Generally, bulding OHLCV array from trades (executions) data is a bit tricky.
    # For example, if you want to build 100 ohlcv bars of 1-minute timeframe, then you have to fetch the 100 minutes of trading data. So, higher timeframe bars require more trading data (i.e. building 100 bars of 1-day timeframe OHLCV would require massive amount of trading data, which might not be desirable for user, because of data-usage rate limits)
    myex = ccxt.okx({})
    timeframe = '1m'
    symbol = 'DOGE/USDT'
    since = myex.milliseconds() - 10 * 60 * 1000 * 1000  # last 10 hrs
    limit = 100
    trades = await myex.fetch_trades(symbol, since, limit)
    ohlcv_array = myex.build_ohlcvc(trades, timeframe, since, limit)
    # you can ignore 6th index ("count" field) from ohlcv entries, which is not part of OHLCV standard structure and is just added internally by `buildOHLCVC` method
    print('Constructed bars from trades: ', len(ohlcv_array), ohlcv_array)

    await myex.close()


asyncio.run(example())

<?php

namespace ccxt\async\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class coinone extends \ccxt\async\Exchange {
    public function public_get_orderbook($params = array()) {
        return $this->request('orderbook/', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_trades($params = array()) {
        return $this->request('trades/', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_ticker($params = array()) {
        return $this->request('ticker/', 'public', 'GET', $params, null, null, array());
    }
    public function private_post_account_deposit_address($params = array()) {
        return $this->request('account/deposit_address/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_account_btc_deposit_address($params = array()) {
        return $this->request('account/btc_deposit_address/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_account_balance($params = array()) {
        return $this->request('account/balance/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_account_daily_balance($params = array()) {
        return $this->request('account/daily_balance/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_account_user_info($params = array()) {
        return $this->request('account/user_info/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_account_virtual_account($params = array()) {
        return $this->request('account/virtual_account/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_cancel_all($params = array()) {
        return $this->request('order/cancel_all/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_cancel($params = array()) {
        return $this->request('order/cancel/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_limit_buy($params = array()) {
        return $this->request('order/limit_buy/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_limit_sell($params = array()) {
        return $this->request('order/limit_sell/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_complete_orders($params = array()) {
        return $this->request('order/complete_orders/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_limit_orders($params = array()) {
        return $this->request('order/limit_orders/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_query_order($params = array()) {
        return $this->request('order/query_order/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_transaction_auth_number($params = array()) {
        return $this->request('transaction/auth_number/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_transaction_history($params = array()) {
        return $this->request('transaction/history/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_transaction_krw_history($params = array()) {
        return $this->request('transaction/krw/history/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_transaction_btc($params = array()) {
        return $this->request('transaction/btc/', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_transaction_coin($params = array()) {
        return $this->request('transaction/coin/', 'private', 'POST', $params, null, null, array());
    }
    public function publicGetOrderbook($params = array()) {
        return $this->request('orderbook/', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetTrades($params = array()) {
        return $this->request('trades/', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetTicker($params = array()) {
        return $this->request('ticker/', 'public', 'GET', $params, null, null, array());
    }
    public function privatePostAccountDepositAddress($params = array()) {
        return $this->request('account/deposit_address/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostAccountBtcDepositAddress($params = array()) {
        return $this->request('account/btc_deposit_address/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostAccountBalance($params = array()) {
        return $this->request('account/balance/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostAccountDailyBalance($params = array()) {
        return $this->request('account/daily_balance/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostAccountUserInfo($params = array()) {
        return $this->request('account/user_info/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostAccountVirtualAccount($params = array()) {
        return $this->request('account/virtual_account/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderCancelAll($params = array()) {
        return $this->request('order/cancel_all/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderCancel($params = array()) {
        return $this->request('order/cancel/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderLimitBuy($params = array()) {
        return $this->request('order/limit_buy/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderLimitSell($params = array()) {
        return $this->request('order/limit_sell/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderCompleteOrders($params = array()) {
        return $this->request('order/complete_orders/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderLimitOrders($params = array()) {
        return $this->request('order/limit_orders/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderQueryOrder($params = array()) {
        return $this->request('order/query_order/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostTransactionAuthNumber($params = array()) {
        return $this->request('transaction/auth_number/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostTransactionHistory($params = array()) {
        return $this->request('transaction/history/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostTransactionKrwHistory($params = array()) {
        return $this->request('transaction/krw/history/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostTransactionBtc($params = array()) {
        return $this->request('transaction/btc/', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostTransactionCoin($params = array()) {
        return $this->request('transaction/coin/', 'private', 'POST', $params, null, null, array());
    }
}

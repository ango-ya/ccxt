<?php

namespace ccxt\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class bittrex extends \ccxt\Exchange {
    public function public_get_ping($params = array()) {
        return $this->request('ping', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_currencies($params = array()) {
        return $this->request('currencies', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_currencies_symbol($params = array()) {
        return $this->request('currencies/{symbol}', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets($params = array()) {
        return $this->request('markets', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets_tickers($params = array()) {
        return $this->request('markets/tickers', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets_summaries($params = array()) {
        return $this->request('markets/summaries', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets_marketsymbol($params = array()) {
        return $this->request('markets/{marketSymbol}', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets_marketsymbol_summary($params = array()) {
        return $this->request('markets/{marketSymbol}/summary', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets_marketsymbol_orderbook($params = array()) {
        return $this->request('markets/{marketSymbol}/orderbook', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets_marketsymbol_trades($params = array()) {
        return $this->request('markets/{marketSymbol}/trades', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets_marketsymbol_ticker($params = array()) {
        return $this->request('markets/{marketSymbol}/ticker', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets_marketsymbol_candles_candleinterval_recent($params = array()) {
        return $this->request('markets/{marketSymbol}/candles/{candleInterval}/recent', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets_marketsymbol_candles_candleinterval_historical_year_month_day($params = array()) {
        return $this->request('markets/{marketSymbol}/candles/{candleInterval}/historical/{year}/{month}/{day}', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets_marketsymbol_candles_candleinterval_historical_year_month($params = array()) {
        return $this->request('markets/{marketSymbol}/candles/{candleInterval}/historical/{year}/{month}', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets_marketsymbol_candles_candleinterval_historical_year($params = array()) {
        return $this->request('markets/{marketSymbol}/candles/{candleInterval}/historical/{year}', 'public', 'GET', $params, null, null, array());
    }
    public function private_get_account($params = array()) {
        return $this->request('account', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_account_fees_fiat($params = array()) {
        return $this->request('account/fees/fiat', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_account_fees_fiat_currencysymbol($params = array()) {
        return $this->request('account/fees/fiat/{currencySymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_account_fees_trading($params = array()) {
        return $this->request('account/fees/trading', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_account_fees_trading_marketsymbol($params = array()) {
        return $this->request('account/fees/trading/{marketSymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_account_volume($params = array()) {
        return $this->request('account/volume', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_account_permissions_markets($params = array()) {
        return $this->request('account/permissions/markets', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_account_permissions_markets_marketsymbol($params = array()) {
        return $this->request('account/permissions/markets/{marketSymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_account_permissions_currencies($params = array()) {
        return $this->request('account/permissions/currencies', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_account_permissions_currencies_currencysymbol($params = array()) {
        return $this->request('account/permissions/currencies/{currencySymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_addresses($params = array()) {
        return $this->request('addresses', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_addresses_currencysymbol($params = array()) {
        return $this->request('addresses/{currencySymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_balances($params = array()) {
        return $this->request('balances', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_balances_currencysymbol($params = array()) {
        return $this->request('balances/{currencySymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_deposits_open($params = array()) {
        return $this->request('deposits/open', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_deposits_closed($params = array()) {
        return $this->request('deposits/closed', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_deposits_bytxid_txid($params = array()) {
        return $this->request('deposits/ByTxId/{txId}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_deposits_depositid($params = array()) {
        return $this->request('deposits/{depositId}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_executions($params = array()) {
        return $this->request('executions', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_executions_last_id($params = array()) {
        return $this->request('executions/last-id', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_executions_executionid($params = array()) {
        return $this->request('executions/{executionId}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_orders_closed($params = array()) {
        return $this->request('orders/closed', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_orders_open($params = array()) {
        return $this->request('orders/open', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_orders_orderid($params = array()) {
        return $this->request('orders/{orderId}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_orders_orderid_executions($params = array()) {
        return $this->request('orders/{orderId}/executions', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_ping($params = array()) {
        return $this->request('ping', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_subaccounts_subaccountid($params = array()) {
        return $this->request('subaccounts/{subaccountId}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_subaccounts($params = array()) {
        return $this->request('subaccounts', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_subaccounts_withdrawals_open($params = array()) {
        return $this->request('subaccounts/withdrawals/open', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_subaccounts_withdrawals_closed($params = array()) {
        return $this->request('subaccounts/withdrawals/closed', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_subaccounts_deposits_open($params = array()) {
        return $this->request('subaccounts/deposits/open', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_subaccounts_deposits_closed($params = array()) {
        return $this->request('subaccounts/deposits/closed', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_withdrawals_open($params = array()) {
        return $this->request('withdrawals/open', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_withdrawals_closed($params = array()) {
        return $this->request('withdrawals/closed', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_withdrawals_bytxid_txid($params = array()) {
        return $this->request('withdrawals/ByTxId/{txId}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_withdrawals_withdrawalid($params = array()) {
        return $this->request('withdrawals/{withdrawalId}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_withdrawals_allowed_addresses($params = array()) {
        return $this->request('withdrawals/allowed-addresses', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_conditional_orders_conditionalorderid($params = array()) {
        return $this->request('conditional-orders/{conditionalOrderId}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_conditional_orders_closed($params = array()) {
        return $this->request('conditional-orders/closed', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_conditional_orders_open($params = array()) {
        return $this->request('conditional-orders/open', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_transfers_sent($params = array()) {
        return $this->request('transfers/sent', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_transfers_received($params = array()) {
        return $this->request('transfers/received', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_transfers_transferid($params = array()) {
        return $this->request('transfers/{transferId}', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_funds_transfer_methods_fundstransfermethodid($params = array()) {
        return $this->request('funds-transfer-methods/{fundsTransferMethodId}', 'private', 'GET', $params, null, null, array());
    }
    public function private_post_addresses($params = array()) {
        return $this->request('addresses', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_orders($params = array()) {
        return $this->request('orders', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_subaccounts($params = array()) {
        return $this->request('subaccounts', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_withdrawals($params = array()) {
        return $this->request('withdrawals', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_conditional_orders($params = array()) {
        return $this->request('conditional-orders', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_transfers($params = array()) {
        return $this->request('transfers', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_batch($params = array()) {
        return $this->request('batch', 'private', 'POST', $params, null, null, array());
    }
    public function private_delete_orders_open($params = array()) {
        return $this->request('orders/open', 'private', 'DELETE', $params, null, null, array());
    }
    public function private_delete_orders_orderid($params = array()) {
        return $this->request('orders/{orderId}', 'private', 'DELETE', $params, null, null, array());
    }
    public function private_delete_withdrawals_withdrawalid($params = array()) {
        return $this->request('withdrawals/{withdrawalId}', 'private', 'DELETE', $params, null, null, array());
    }
    public function private_delete_conditional_orders_conditionalorderid($params = array()) {
        return $this->request('conditional-orders/{conditionalOrderId}', 'private', 'DELETE', $params, null, null, array());
    }
    public function signalr_get_negotiate($params = array()) {
        return $this->request('negotiate', 'signalr', 'GET', $params, null, null, array());
    }
    public function signalr_get_start($params = array()) {
        return $this->request('start', 'signalr', 'GET', $params, null, null, array());
    }
    public function publicGetPing($params = array()) {
        return $this->request('ping', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetCurrencies($params = array()) {
        return $this->request('currencies', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetCurrenciesSymbol($params = array()) {
        return $this->request('currencies/{symbol}', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarkets($params = array()) {
        return $this->request('markets', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarketsTickers($params = array()) {
        return $this->request('markets/tickers', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarketsSummaries($params = array()) {
        return $this->request('markets/summaries', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarketsMarketSymbol($params = array()) {
        return $this->request('markets/{marketSymbol}', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarketsMarketSymbolSummary($params = array()) {
        return $this->request('markets/{marketSymbol}/summary', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarketsMarketSymbolOrderbook($params = array()) {
        return $this->request('markets/{marketSymbol}/orderbook', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarketsMarketSymbolTrades($params = array()) {
        return $this->request('markets/{marketSymbol}/trades', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarketsMarketSymbolTicker($params = array()) {
        return $this->request('markets/{marketSymbol}/ticker', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarketsMarketSymbolCandlesCandleIntervalRecent($params = array()) {
        return $this->request('markets/{marketSymbol}/candles/{candleInterval}/recent', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYearMonthDay($params = array()) {
        return $this->request('markets/{marketSymbol}/candles/{candleInterval}/historical/{year}/{month}/{day}', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYearMonth($params = array()) {
        return $this->request('markets/{marketSymbol}/candles/{candleInterval}/historical/{year}/{month}', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYear($params = array()) {
        return $this->request('markets/{marketSymbol}/candles/{candleInterval}/historical/{year}', 'public', 'GET', $params, null, null, array());
    }
    public function privateGetAccount($params = array()) {
        return $this->request('account', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAccountFeesFiat($params = array()) {
        return $this->request('account/fees/fiat', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAccountFeesFiatCurrencySymbol($params = array()) {
        return $this->request('account/fees/fiat/{currencySymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAccountFeesTrading($params = array()) {
        return $this->request('account/fees/trading', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAccountFeesTradingMarketSymbol($params = array()) {
        return $this->request('account/fees/trading/{marketSymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAccountVolume($params = array()) {
        return $this->request('account/volume', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAccountPermissionsMarkets($params = array()) {
        return $this->request('account/permissions/markets', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAccountPermissionsMarketsMarketSymbol($params = array()) {
        return $this->request('account/permissions/markets/{marketSymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAccountPermissionsCurrencies($params = array()) {
        return $this->request('account/permissions/currencies', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAccountPermissionsCurrenciesCurrencySymbol($params = array()) {
        return $this->request('account/permissions/currencies/{currencySymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAddresses($params = array()) {
        return $this->request('addresses', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAddressesCurrencySymbol($params = array()) {
        return $this->request('addresses/{currencySymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetBalances($params = array()) {
        return $this->request('balances', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetBalancesCurrencySymbol($params = array()) {
        return $this->request('balances/{currencySymbol}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetDepositsOpen($params = array()) {
        return $this->request('deposits/open', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetDepositsClosed($params = array()) {
        return $this->request('deposits/closed', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetDepositsByTxIdTxId($params = array()) {
        return $this->request('deposits/ByTxId/{txId}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetDepositsDepositId($params = array()) {
        return $this->request('deposits/{depositId}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetExecutions($params = array()) {
        return $this->request('executions', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetExecutionsLastId($params = array()) {
        return $this->request('executions/last-id', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetExecutionsExecutionId($params = array()) {
        return $this->request('executions/{executionId}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetOrdersClosed($params = array()) {
        return $this->request('orders/closed', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetOrdersOpen($params = array()) {
        return $this->request('orders/open', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetOrdersOrderId($params = array()) {
        return $this->request('orders/{orderId}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetOrdersOrderIdExecutions($params = array()) {
        return $this->request('orders/{orderId}/executions', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetPing($params = array()) {
        return $this->request('ping', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetSubaccountsSubaccountId($params = array()) {
        return $this->request('subaccounts/{subaccountId}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetSubaccounts($params = array()) {
        return $this->request('subaccounts', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetSubaccountsWithdrawalsOpen($params = array()) {
        return $this->request('subaccounts/withdrawals/open', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetSubaccountsWithdrawalsClosed($params = array()) {
        return $this->request('subaccounts/withdrawals/closed', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetSubaccountsDepositsOpen($params = array()) {
        return $this->request('subaccounts/deposits/open', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetSubaccountsDepositsClosed($params = array()) {
        return $this->request('subaccounts/deposits/closed', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetWithdrawalsOpen($params = array()) {
        return $this->request('withdrawals/open', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetWithdrawalsClosed($params = array()) {
        return $this->request('withdrawals/closed', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetWithdrawalsByTxIdTxId($params = array()) {
        return $this->request('withdrawals/ByTxId/{txId}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetWithdrawalsWithdrawalId($params = array()) {
        return $this->request('withdrawals/{withdrawalId}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetWithdrawalsAllowedAddresses($params = array()) {
        return $this->request('withdrawals/allowed-addresses', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetConditionalOrdersConditionalOrderId($params = array()) {
        return $this->request('conditional-orders/{conditionalOrderId}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetConditionalOrdersClosed($params = array()) {
        return $this->request('conditional-orders/closed', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetConditionalOrdersOpen($params = array()) {
        return $this->request('conditional-orders/open', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetTransfersSent($params = array()) {
        return $this->request('transfers/sent', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetTransfersReceived($params = array()) {
        return $this->request('transfers/received', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetTransfersTransferId($params = array()) {
        return $this->request('transfers/{transferId}', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetFundsTransferMethodsFundsTransferMethodId($params = array()) {
        return $this->request('funds-transfer-methods/{fundsTransferMethodId}', 'private', 'GET', $params, null, null, array());
    }
    public function privatePostAddresses($params = array()) {
        return $this->request('addresses', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrders($params = array()) {
        return $this->request('orders', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostSubaccounts($params = array()) {
        return $this->request('subaccounts', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostWithdrawals($params = array()) {
        return $this->request('withdrawals', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostConditionalOrders($params = array()) {
        return $this->request('conditional-orders', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostTransfers($params = array()) {
        return $this->request('transfers', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostBatch($params = array()) {
        return $this->request('batch', 'private', 'POST', $params, null, null, array());
    }
    public function privateDeleteOrdersOpen($params = array()) {
        return $this->request('orders/open', 'private', 'DELETE', $params, null, null, array());
    }
    public function privateDeleteOrdersOrderId($params = array()) {
        return $this->request('orders/{orderId}', 'private', 'DELETE', $params, null, null, array());
    }
    public function privateDeleteWithdrawalsWithdrawalId($params = array()) {
        return $this->request('withdrawals/{withdrawalId}', 'private', 'DELETE', $params, null, null, array());
    }
    public function privateDeleteConditionalOrdersConditionalOrderId($params = array()) {
        return $this->request('conditional-orders/{conditionalOrderId}', 'private', 'DELETE', $params, null, null, array());
    }
    public function signalrGetNegotiate($params = array()) {
        return $this->request('negotiate', 'signalr', 'GET', $params, null, null, array());
    }
    public function signalrGetStart($params = array()) {
        return $this->request('start', 'signalr', 'GET', $params, null, null, array());
    }
}

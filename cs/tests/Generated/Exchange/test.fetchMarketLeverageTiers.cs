using ccxt;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


public partial class testMainClass : BaseTest
{
    async static public Task testFetchMarketLeverageTiers(Exchange exchange, object skippedProperties, object symbol)
    {
        object method = "fetchMarketLeverageTiers";
        object tiers = await exchange.fetchMarketLeverageTiers(symbol);
        assert(((tiers is IList<object>) || (tiers.GetType().IsGenericType && tiers.GetType().GetGenericTypeDefinition().IsAssignableFrom(typeof(List<>)))), add(add(add(add(add(add(exchange.id, " "), method), " "), symbol), " must return an array. "), exchange.json(tiers)));
        object arrayLength = getArrayLength(tiers);
        assert(isGreaterThanOrEqual(arrayLength, 1), add(add(add(add(add(add(exchange.id, " "), method), " "), symbol), " must return an array with at least one entry. "), exchange.json(tiers)));
        for (object j = 0; isLessThan(j, getArrayLength(tiers)); postFixIncrement(ref j))
        {
            testLeverageTier(exchange, skippedProperties, method, getValue(tiers, j));
        }
    }

}